        -:    0:Source:/Users/IAGO/Desktop/TPI/testEnunciado/recorridoNoCubiertoTEST.cpp
        -:    0:Graph:/Users/IAGO/Desktop/TPI/cmake-build-debug/CMakeFiles/tpi.dir/testEnunciado/recorridoNoCubiertoTEST.gcno
        -:    0:Data:/Users/IAGO/Desktop/TPI/cmake-build-debug/CMakeFiles/tpi.dir/testEnunciado/recorridoNoCubiertoTEST.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "../auxiliares.h"
        -:    3:#include "gtest/gtest.h"
        -:    4:
        -:    5:template<typename T>
function _Z8includedINSt3__15tupleIJddEEEEbT_NS0_6vectorIS3_NS0_9allocatorIS3_EEEE called 3 returned 100% blocks executed 87%
        3:    6:bool included(T elem, vector<T> container){
        6:    7:    for (int i = 0; i < container.size(); ++i) {
        3:    7-block  0
        6:    7-block  1
branch  0 taken 6
branch  1 taken 0
        3:    7-block  2
        6:    8:        if (container[i] == elem){return true;}
        6:    8-block  0
branch  0 taken 3
branch  1 taken 3
        3:    8-block  1
        3:    9:    }
        3:    9-block  0
    #####:   10:    return false;
    $$$$$:   10-block  0
        3:   11:}
        3:   11-block  0
        -:   12:
        -:   13:template<typename T>
function _Z15ASSERT_ELEMENTSINSt3__15tupleIJddEEEEvNS0_6vectorIT_NS0_9allocatorIS4_EEEES7_ called 1 returned 100% blocks executed 42%
        1:   14:void ASSERT_ELEMENTS(vector<T> container, vector<T> elems) {
        4:   15:    for(int i = 0; i < elems.size(); i++ ) {
        1:   15-block  0
        4:   15-block  1
branch  0 taken 1
branch  1 taken 3
        3:   15-block  2
        3:   16:        ASSERT_TRUE(included(elems[i], container));
        3:   16-block  0
branch  0 taken 3
branch  1 taken 0
        3:   16-block  1
branch  2 taken 3
branch  3 taken 0
        3:   16-block  2
branch  4 taken 3
branch  5 taken 0
        3:   16-block  3
    $$$$$:   16-block  4
    $$$$$:   16-block  5
branch  6 never executed
branch  7 never executed
    $$$$$:   16-block  6
branch  8 never executed
branch  9 never executed
    $$$$$:   16-block  7
branch 10 never executed
branch 11 never executed
    $$$$$:   16-block  8
branch 12 never executed
branch 13 never executed
    $$$$$:   16-block  9
    $$$$$:   16-block 10
    $$$$$:   16-block 11
    $$$$$:   16-block 12
        3:   16-block 13
        3:   16-block 14
branch 14 taken 0
branch 15 taken 0
branch 16 taken 3
    $$$$$:   16-block 15
    $$$$$:   16-block 16
        3:   17:    }
        3:   17-block  0
        -:   18:
        1:   19:}
    $$$$$:   19-block  0
    $$$$$:   19-block  1
    $$$$$:   19-block  2
        1:   19-block  3
        -:   20:
        -:   21:using namespace std;
        -:   22:
        1:   23:const gps P = puntoGps(-31.465027, -64.212973);
        1:   23-block  0
       10:   24:const recorrido R = {P,
        1:   25:                     desviarPunto(P, 1000, 0),
        1:   26:                     desviarPunto(P, 2000, 0),
        1:   27:                     desviarPunto(P, 3000, 0),
        1:   28:                     desviarPunto(P, 4000, 0),
        1:   29:                     desviarPunto(P, 5000, 0),
        1:   30:                     desviarPunto(P, 6000, 0),
        1:   31:                     desviarPunto(P, 7000, 0),
        1:   32:                     desviarPunto(P, 8000, 0),
        2:   33:                     desviarPunto(P, 9000, 0),
        1:   33-block  0
        1:   33-block  1
        -:   34:                      };
        -:   35:
       12:   36:const recorrido RRulos = {P,
        1:   37:                     desviarPunto(P, 1000, 0),
        1:   38:                     desviarPunto(P, 2000, 0),
        1:   39:                     desviarPunto(P, 3000, 0),
        1:   40:                     desviarPunto(P, 4000, 0),
        1:   41:                     desviarPunto(P, 5000, 0),
        1:   42:                     desviarPunto(P, 5000, 100),
        1:   43:                     desviarPunto(P, 4000, 100),
        1:   44:                     desviarPunto(P, 3000, 100),
        1:   45:                     desviarPunto(P, 2000, 100),
        1:   46:                     desviarPunto(P, 1000, 100),
        2:   47:                     desviarPunto(P, 0, 0)
        1:   47-block  0
        1:   47-block  1
        -:   48:};
        -:   49:
        -:   50:
        -:   51:
function _ZN42recorridoNoCubiertoTEST_viajePerfecto_Test8TestBodyEv called 1 returned 100% blocks executed 43%
function _ZN42recorridoNoCubiertoTEST_viajePerfecto_TestD1Ev called 1 returned 100% blocks executed 100%
function _ZN42recorridoNoCubiertoTEST_viajePerfecto_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN42recorridoNoCubiertoTEST_viajePerfecto_TestC1Ev called 1 returned 100% blocks executed 100%
function _ZN42recorridoNoCubiertoTEST_viajePerfecto_TestC2Ev called 1 returned 100% blocks executed 100%
function _ZN42recorridoNoCubiertoTEST_viajePerfecto_TestD2Ev called 1 returned 100% blocks executed 100%
        4:   52:TEST(recorridoNoCubiertoTEST, viajePerfecto){
        1:   52-block  0
branch  0 taken 1
branch  1 taken 0
        1:   52-block  1
branch  2 taken 1
branch  3 taken 0
        1:   52-block  2
branch  4 taken 1
branch  5 taken 0
        1:   52-block  3
branch  6 taken 1
branch  7 taken 0
        1:   52-block  4
branch  8 taken 1
branch  9 taken 0
        1:   52-block  5
    $$$$$:   52-block  6
    $$$$$:   52-block  7
    $$$$$:   52-block  8
    $$$$$:   52-block  9
    $$$$$:   52-block 10
    $$$$$:   52-block 11
        1:   52-block 12
        1:   52-block 13
        1:   53:    viaje v = {};
       11:   54:    for(int i = 0; i < R.size(); i++){
        1:   54-block  0
       11:   54-block  1
branch  0 taken 1
branch  1 taken 10
       10:   54-block  2
       10:   55:        v.push_back(medicion(i, R[i]));
       10:   55-block  0
branch  0 taken 10
branch  1 taken 0
       10:   55-block  1
branch  2 taken 10
branch  3 taken 0
       10:   56:    }
       10:   56-block  0
        -:   57:
        1:   58:    EXPECT_EQ(recorridoNoCubierto(v, R, 10).size(), 0);
        1:   58-block  0
branch  0 taken 1
branch  1 taken 0
        1:   58-block  1
branch  2 taken 1
branch  3 taken 0
        1:   58-block  2
branch  4 taken 1
branch  5 taken 0
        1:   58-block  3
branch  6 taken 1
branch  7 taken 0
        1:   58-block  4
branch  8 taken 1
branch  9 taken 0
        1:   58-block  5
branch 10 taken 0
branch 11 taken 1
        1:   58-block  6
    $$$$$:   58-block  7
    $$$$$:   58-block  8
    $$$$$:   58-block  9
    $$$$$:   58-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   58-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   58-block 12
branch 16 never executed
branch 17 never executed
    $$$$$:   58-block 13
branch 18 never executed
branch 19 never executed
    $$$$$:   58-block 14
    $$$$$:   58-block 15
    $$$$$:   58-block 16
    $$$$$:   58-block 17
        1:   59:}
    $$$$$:   59-block  0
    $$$$$:   59-block  1
    $$$$$:   59-block  2
    $$$$$:   59-block  3
    $$$$$:   59-block  4
        1:   59-block  5
    $$$$$:   59-block  6
    $$$$$:   59-block  7
        -:   60:
function _ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMayoresAlUmbral_Test8TestBodyEv called 1 returned 100% blocks executed 45%
function _ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMayoresAlUmbral_TestD1Ev called 1 returned 100% blocks executed 100%
function _ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMayoresAlUmbral_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMayoresAlUmbral_TestC1Ev called 1 returned 100% blocks executed 100%
function _ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMayoresAlUmbral_TestC2Ev called 1 returned 100% blocks executed 100%
function _ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMayoresAlUmbral_TestD2Ev called 1 returned 100% blocks executed 100%
        4:   61:TEST(recorridoNoCubiertoTEST, viajeConImperfeccionesMayoresAlUmbral){
        1:   61-block  0
branch  0 taken 1
branch  1 taken 0
        1:   61-block  1
branch  2 taken 1
branch  3 taken 0
        1:   61-block  2
branch  4 taken 1
branch  5 taken 0
        1:   61-block  3
branch  6 taken 1
branch  7 taken 0
        1:   61-block  4
branch  8 taken 1
branch  9 taken 0
        1:   61-block  5
    $$$$$:   61-block  6
    $$$$$:   61-block  7
    $$$$$:   61-block  8
    $$$$$:   61-block  9
    $$$$$:   61-block 10
    $$$$$:   61-block 11
        1:   61-block 12
        1:   61-block 13
        1:   62:    viaje v = {};
        1:   63:    vector<int> desvios(R.size(), 0);
        1:   63-block  0
branch  0 taken 1
branch  1 taken 0
        1:   64:    desvios[0] = 390;
        1:   65:    desvios[1] = 30;
        1:   66:    desvios[2] = -190;
        1:   67:    desvios[3] = -390;
        -:   68:
       11:   69:    for(int i = 0; i < R.size(); i++){
        1:   69-block  0
       11:   69-block  1
branch  0 taken 1
branch  1 taken 10
       10:   69-block  2
       10:   70:        v.push_back(medicion(i, desviarPunto(R[i], 0, desvios[i])));
       10:   70-block  0
branch  0 taken 10
branch  1 taken 0
       10:   70-block  1
branch  2 taken 10
branch  3 taken 0
       10:   70-block  2
branch  4 taken 10
branch  5 taken 0
       10:   71:    }
       10:   71-block  0
        -:   72:
        1:   73:    vector<gps> res = recorridoNoCubierto(v, R, 0.1);
        1:   73-block  0
branch  0 taken 1
branch  1 taken 0
        1:   73-block  1
branch  2 taken 1
branch  3 taken 0
        1:   73-block  2
branch  4 taken 1
branch  5 taken 0
    $$$$$:   73-block  3
    $$$$$:   73-block  4
        1:   74:    EXPECT_EQ(res.size(), 3);
        1:   74-block  0
branch  0 taken 1
branch  1 taken 0
        1:   74-block  1
branch  2 taken 1
branch  3 taken 0
        1:   74-block  2
branch  4 taken 0
branch  5 taken 1
        1:   74-block  3
    $$$$$:   74-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:   74-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:   74-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:   74-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   74-block  8
    $$$$$:   74-block  9
    $$$$$:   74-block 10
    $$$$$:   74-block 11
        1:   75:    ASSERT_ELEMENTS(res, {R[3], R[0], R[2]});
        1:   75-block  0
branch  0 taken 1
branch  1 taken 0
        1:   75-block  1
branch  2 taken 1
branch  3 taken 0
        1:   75-block  2
branch  4 taken 1
branch  5 taken 0
    $$$$$:   75-block  3
    $$$$$:   75-block  4
        -:   76:
        1:   77:}
    $$$$$:   77-block  0
    $$$$$:   77-block  1
    $$$$$:   77-block  2
    $$$$$:   77-block  3
    $$$$$:   77-block  4
    $$$$$:   77-block  5
        1:   77-block  6
    $$$$$:   77-block  7
    $$$$$:   77-block  8
    $$$$$:   77-block  9
    $$$$$:   77-block 10
    $$$$$:   77-block 11
